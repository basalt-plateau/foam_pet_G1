 ERR_PNPM_LICENCES_NO_SUBCOMMAND  Please specify the subcommand

Usage: pnpm licenses ls
       pnpm licenses ls --long
       pnpm licenses list
       pnpm licenses list --long

Check the licenses of the installed packages.

Options:
  -D, --dev                Check only "devDependencies"
      --json               Show information in JSON format
      --long               Show more details (such as a link to the repo) are
                           not displayed. To display the details, pass this
                           option.
      --no-optional        Don't check "optionalDependencies"
  -P, --prod               Check only "dependencies" and "optionalDependencies"

Filtering options (run the command only on packages that satisfy at least one of the selectors):
      --changed-files-ignore-pattern <pattern>  Defines files to ignore when
                                                filtering for changed projects
                                                since the specified
                                                commit/branch. Usage example:
                                                pnpm
                                                --filter="...[origin/master]"
                                                --changed-files-ignore-
                                                pattern="**/README.md" build
      --fail-if-no-match                        If no projects are matched by
                                                the command, exit with exit code
                                                1 (fail)
      --filter !<selector>                      If a selector starts with ! (or
                                                \! in zsh), it means the
                                                packages matching the selector
                                                must be excluded. E.g., "pnpm
                                                --filter !foo" selects all
                                                packages except "foo"
      --filter .                                Includes all packages that are
                                                under the current working
                                                directory
      --filter ...^<pattern>                    Includes only the direct and
                                                indirect dependents of the
                                                matched packages without
                                                including the matched packages
                                                themselves. ^ must be doubled at
                                                the Windows Command Prompt.
                                                E.g.: ...^foo (...^^foo in
                                                Command Prompt)
      --filter ...<pattern>                     Includes all direct and indirect
                                                dependents of the matched
                                                packages. E.g.: ...foo,
                                                "...@bar/*"
      --filter ./<dir>                          Includes all packages that are
                                                inside a given subdirectory.
                                                E.g.: ./components
      --filter "[<since>]"                      Includes all packages changed
                                                since the specified
                                                commit/branch. E.g.: "[master]",
                                                "[HEAD~2]". It may be used
                                                together with "...". So, for
                                                instance, "...[HEAD~1]" selects
                                                all packages changed in the last
                                                commit and their dependents
      --filter {<dir>}                          Includes all projects that are
                                                under the specified directory.
                                                It may be used with "..." to
                                                select dependents/dependencies
                                                as well. It also may be combined
                                                with "[<since>]". For instance,
                                                all changed projects inside a
                                                directory:
                                                "{packages}[origin/master]"
      --filter <pattern>                        Restricts the scope to package
                                                names matching the given
                                                pattern. E.g.: foo, "@bar/*"
      --filter <pattern>...                     Includes all direct and indirect
                                                dependencies of the matched
                                                packages. E.g.: foo...
      --filter <pattern>^...                    Includes only the direct and
                                                indirect dependencies of the
                                                matched packages without
                                                including the matched packages
                                                themselves. ^ must be doubled at
                                                the Windows Command Prompt.
                                                E.g.: foo^... (foo^^... in
                                                Command Prompt)
      --filter-prod <pattern>                   Restricts the scope to package
                                                names matching the given pattern
                                                similar to --filter, but it
                                                ignores devDependencies when
                                                searching for dependencies and
                                                dependents.
      --test-pattern <pattern>                  Defines files related to tests.
                                                Useful with the changed since
                                                filter. When selecting only
                                                changed packages and their
                                                dependent packages, the
                                                dependent packages will be
                                                ignored in case a package has
                                                changes only in tests. Usage
                                                example: pnpm
                                                --filter="...[origin/master]"
                                                --test-pattern="test/*" test

Visit https://pnpm.io/9.x/cli/licenses for documentation about this command.
